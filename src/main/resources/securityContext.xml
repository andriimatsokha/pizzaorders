<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

<!-- 
	hasRole([role])
		Returns true if the current principal has the specified role.
	hasAnyRole([role1,role2])
		Returns true if the current principal has any of the supplied roles (given as a comma-separated list of strings)
	principal
		Allows direct access to the principal object representing the current user
	authentication
		Allows direct access to the current Authentication object obtained from the SecurityContext
	permitAll
		Always evaluates to true
	denyAll
		Always evaluates to false
	isAnonymous()
		Returns true if the current principal is an anonymous user
	isRememberMe()
		Returns true if the current principal is a remember-me user
	isAuthenticated()
		Returns true if the user is not anonymous
	isFullyAuthenticated()
		Returns true if the user is not an anonymous or a remember-me user 
-->

	<http>
		<intercept-url pattern="/*" access="permitAll"/>
		<intercept-url pattern="/order/**" access="hasAnyRole('USER', 'ADMIN')"/>
		<intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<form-login default-target-url="/order/pizza/select" always-use-default-target="true"/>
		<logout logout-success-url="/"/>
	</http>
	
	

	
	<authentication-manager>
		<authentication-provider>
			<!-- <user-service>
				<user name="paddy" password="1" authorities="ROLE_USER"/>
				<user name="joe" password="2" authorities="ROLE_USER, ROLE_ADMIN"/>
			</user-service> -->
			<jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="SELECT name, password, 1 FROM Customer WHERE name=?"
				authorities-by-username-query="SELECT c.name, ur.role 
						FROM Customer c
						JOIN UserRole ur ON c.id = ur.customer_id
						WHERE c.name=?"
			/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
